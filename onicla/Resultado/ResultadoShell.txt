   1  Function Void shellsort(Integer array[ ], Integer n) Begin
          S = DeclFunction S
          DeclFunction = 'Function' FunctionType NameFunctionId '(' ConstDecl ')' InternalDecl
          [0001, 0009] (0023,              PR_FUNC) {Function}
          Type = 'Void'
          [0001, 0015] (0043,              PR_VOID) {Void}
          nameFunction = 'id'
          [0001, 0026] (0001,                   ID) {shellsort}
          [0001, 0028] (0045,               AB_PAR) {(}
          ConstDecl = Type 'id' VectorType ConstDecl_LL
          Type = 'Integer'
          [0001, 0036] (0029,           PR_INTEGER) {Integer}
          [0001, 0043] (0001,                   ID) {array}
          VectorType = '[' Ea ']'
          [0001, 0045] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0001, 0048] (0048,              FEC_COL) {]}
          ConstDecl_LL = ',' Type 'id' VectorType ConstDecl_LL
          [0001, 0050] (0050,                  SEP) {,}
          Type = 'Integer'
          [0001, 0059] (0029,           PR_INTEGER) {Integer}
          [0001, 0062] (0001,                   ID) {n}
          VectorType = epsilon
          [0001, 0064] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0001, 0071] (0041,             PR_BEGIN) {Begin}
   2  		Integer h = 1, c, j;
          Instructions = DeclId Instructions
          DeclId = Type IdLL ';'
          Type = 'Integer'
          [0002, 0010] (0029,           PR_INTEGER) {Integer}
          IdLL = Id '=' Id_LL
          Id = 'id' VectorType
          [0002, 0013] (0001,                   ID) {h}
          VectorType = epsilon
          = = '=' Ec
          [0002, 0016] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0002, 0019] (0003,              CTE_INT) {1}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Id_LL = ',' Id '=' Id_LL
          [0002, 0021] (0050,                  SEP) {,}
          Id = 'id' VectorType
          [0002, 0024] (0001,                   ID) {c}
          VectorType = epsilon
          = = epsilon
          Id_LL = ',' Id '=' Id_LL
          [0002, 0026] (0050,                  SEP) {,}
          Id = 'id' VectorType
          [0002, 0029] (0001,                   ID) {j}
          VectorType = epsilon
          = = epsilon
          Id_LL = epsilon
          [0002, 0031] (0049,             TERMINAL) {;}
   3  
   4          While (h < n) Begin
          Instructions = Command Instructions
          Command = 'PR_WHILE' '(' Eb ')' InternalDecl
          [0004, 0014] (0027,             PR_WHILE) {While}
          [0004, 0017] (0045,               AB_PAR) {(}
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0004, 0019] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = 'OP_LESS' Ra FbLL
          [0004, 0022] (0016,              OP_LESS) {<}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0004, 0025] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          [0004, 0027] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0004, 0034] (0041,             PR_BEGIN) {Begin}
   5  			h = h * 3 + 1;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0005, 0005] (0001,                   ID) {h}
          Atrib = '=' Ec Atrib
          [0005, 0008] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0005, 0011] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = 'OP_MULT' Pa TaLL
          [0005, 0014] (0011,              OP_MULT) {*}
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0005, 0017] (0003,              CTE_INT) {3}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = 'OP_AD' Ta EaLL
          [0005, 0020] (0009,                OP_AD) {+}
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0005, 0023] (0003,              CTE_INT) {1}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0005, 0025] (0049,             TERMINAL) {;}
   6  		End
          Instructions = epsilon
          [0006, 0006] (0042,               PR_END) {End}
   7  
   8  		h = h / 3;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0008, 0004] (0001,                   ID) {h}
          Atrib = '=' Ec Atrib
          [0008, 0007] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0008, 0010] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = 'OP_DIV' Pa TaLL
          [0008, 0013] (0012,               OP_DIV) {/}
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0008, 0016] (0003,              CTE_INT) {3}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0008, 0018] (0049,             TERMINAL) {;}
   9  
  10  		While(h > 0) Begin
          Instructions = Command Instructions
          Command = 'PR_WHILE' '(' Eb ')' InternalDecl
          [0010, 0008] (0027,             PR_WHILE) {While}
          [0010, 0010] (0045,               AB_PAR) {(}
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0010, 0012] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = 'OP_GREAT' Ra FbLL
          [0010, 0015] (0015,           OP_GREATER) {>}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0010, 0018] (0003,              CTE_INT) {0}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          [0010, 0020] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0010, 0027] (0041,             PR_BEGIN) {Begin}
  11  			Repeat (Integer i = h, 1, n) Begin
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0011, 0010] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0011, 0013] (0045,               AB_PAR) {(}
          [0011, 0021] (0029,           PR_INTEGER) {Integer}
          [0011, 0024] (0001,                   ID) {i}
          [0011, 0027] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0011, 0030] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0011, 0032] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0011, 0035] (0003,              CTE_INT) {1}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          repeatStep = ',' Ea
          [0011, 0037] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0011, 0040] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0011, 0042] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0011, 0049] (0041,             PR_BEGIN) {Begin}
  12                      c = array[i];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0012, 0022] (0001,                   ID) {c}
          Atrib = '=' Ec Atrib
          [0012, 0025] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0012, 0032] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0012, 0034] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0012, 0036] (0001,                   ID) {i}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0012, 0038] (0048,              FEC_COL) {]}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0012, 0040] (0049,             TERMINAL) {;}
  13                      j = i;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0013, 0022] (0001,                   ID) {j}
          Atrib = '=' Ec Atrib
          [0013, 0025] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0013, 0028] (0001,                   ID) {i}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0013, 0030] (0049,             TERMINAL) {;}
  14                      While (j >= h And array[j - h] > c) Begin
          Instructions = Command Instructions
          Command = 'PR_WHILE' '(' Eb ')' InternalDecl
          [0014, 0026] (0027,             PR_WHILE) {While}
          [0014, 0029] (0045,               AB_PAR) {(}
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0031] (0001,                   ID) {j}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = 'OP_GREATEQ' Ra FbLL
          [0014, 0035] (0017,           OP_GREATEQ) {>=}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0038] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = 'PR_AND' Fb TbLL
          [0014, 0043] (0021,               PR_AND) {And}
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0050] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0014, 0052] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0054] (0001,                   ID) {j}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = 'OP_SUB' Ta EaLL
          [0014, 0057] (0010,               OP_SUB) {-}
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0060] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0014, 0062] (0048,              FEC_COL) {]}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = 'OP_GREAT' Ra FbLL
          [0014, 0065] (0015,           OP_GREATER) {>}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0068] (0001,                   ID) {c}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          [0014, 0070] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0014, 0077] (0041,             PR_BEGIN) {Begin}
  15                              array[j] = array[j - h];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0015, 0034] (0001,                   ID) {array}
          ParamAtrib = '[' Ea ']' '=' Ec Atrib
          [0015, 0036] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0038] (0001,                   ID) {j}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0015, 0040] (0048,              FEC_COL) {]}
          [0015, 0043] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0050] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0015, 0052] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0054] (0001,                   ID) {j}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = 'OP_SUB' Ta EaLL
          [0015, 0057] (0010,               OP_SUB) {-}
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0060] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0015, 0062] (0048,              FEC_COL) {]}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0015, 0064] (0049,             TERMINAL) {;}
  16                              j = j - h;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0016, 0030] (0001,                   ID) {j}
          Atrib = '=' Ec Atrib
          [0016, 0033] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0016, 0036] (0001,                   ID) {j}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = 'OP_SUB' Ta EaLL
          [0016, 0039] (0010,               OP_SUB) {-}
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0016, 0042] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0016, 0044] (0049,             TERMINAL) {;}
  17                      End
          Instructions = epsilon
          [0017, 0024] (0042,               PR_END) {End}
  18                      array[j] = c;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0018, 0026] (0001,                   ID) {array}
          ParamAtrib = '[' Ea ']' '=' Ec Atrib
          [0018, 0028] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0018, 0030] (0001,                   ID) {j}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0018, 0032] (0048,              FEC_COL) {]}
          [0018, 0035] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0018, 0038] (0001,                   ID) {c}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0018, 0040] (0049,             TERMINAL) {;}
  19  			End
          Instructions = epsilon
          [0019, 0007] (0042,               PR_END) {End}
  20  			h = h / 2;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0020, 0005] (0001,                   ID) {h}
          Atrib = '=' Ec Atrib
          [0020, 0008] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0020, 0011] (0001,                   ID) {h}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = 'OP_DIV' Pa TaLL
          [0020, 0014] (0012,               OP_DIV) {/}
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0020, 0017] (0003,              CTE_INT) {2}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0020, 0019] (0049,             TERMINAL) {;}
  21  		End
          Instructions = epsilon
          [0021, 0006] (0042,               PR_END) {End}
  22  		Refound;
          Instructions = 'Refound' Return ';'
          [0022, 0010] (0024,           PR_REFOUND) {Refound}
          Refound = epsilon
          [0022, 0012] (0049,             TERMINAL) {;}
  23  	End
          [0023, 0005] (0042,               PR_END) {End}
  24  
  25  Function Integer Main ( ) Begin
          S = DeclFunction S
          DeclFunction = 'Function' FunctionType NameFunctionId '(' ConstDecl ')' InternalDecl
          [0025, 0009] (0023,              PR_FUNC) {Function}
          Type = 'Integer'
          [0025, 0018] (0029,           PR_INTEGER) {Integer}
          nameFunction = 'main'
          [0025, 0024] (0044,              PR_MAIN) {Main}
          [0025, 0027] (0045,               AB_PAR) {(}
          ConstDecl = epsilon
          [0025, 0030] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0025, 0037] (0041,             PR_BEGIN) {Begin}
  26  		Integer n, v;
          Instructions = DeclId Instructions
          DeclId = Type IdLL ';'
          Type = 'Integer'
          [0026, 0010] (0029,           PR_INTEGER) {Integer}
          IdLL = Id '=' Id_LL
          Id = 'id' VectorType
          [0026, 0013] (0001,                   ID) {n}
          VectorType = epsilon
          = = epsilon
          Id_LL = ',' Id '=' Id_LL
          [0026, 0015] (0050,                  SEP) {,}
          Id = 'id' VectorType
          [0026, 0018] (0001,                   ID) {v}
          VectorType = epsilon
          = = epsilon
          Id_LL = epsilon
          [0026, 0020] (0049,             TERMINAL) {;}
  27  		Print('Digite o tamanho do array a ser ordenado: ');
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0027, 0008] (0035,             PR_PRINT) {Print}
          [0027, 0010] (0045,               AB_PAR) {(}
          [0027, 0055] (0005,           CTE_CADCHA) {'Digite o tamanho do array a ser ordenado: '}
          PrintParam = epsilon
          [0027, 0057] (0046,              FEC_PAR) {)}
          [0027, 0059] (0049,             TERMINAL) {;}
  28  		Input(n);
          Instructions = Command Instructions
          Command = 'Input' '(' InputParam ')' ';'
          [0028, 0008] (0034,             PR_INPUT) {Input}
          [0028, 0010] (0045,               AB_PAR) {(}
          InputParam = 'id' VectorType InputParamLL
          [0028, 0012] (0001,                   ID) {n}
          VectorType = epsilon
          InputParamLL = epsilon
          [0028, 0014] (0046,              FEC_PAR) {)}
          [0028, 0016] (0049,             TERMINAL) {;}
  29  		Integer array[n];
          Instructions = DeclId Instructions
          DeclId = Type IdLL ';'
          Type = 'Integer'
          [0029, 0010] (0029,           PR_INTEGER) {Integer}
          IdLL = Id '=' Id_LL
          Id = 'id' VectorType
          [0029, 0017] (0001,                   ID) {array}
          VectorType = '[' Ea ']'
          [0029, 0019] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0029, 0021] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0029, 0023] (0048,              FEC_COL) {]}
          = = epsilon
          Id_LL = epsilon
          [0029, 0025] (0049,             TERMINAL) {;}
  30  
  31  		Print('Digite aleatoriamente os numero para serem ordenados: ');
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0031, 0008] (0035,             PR_PRINT) {Print}
          [0031, 0010] (0045,               AB_PAR) {(}
          [0031, 0067] (0005,           CTE_CADCHA) {'Digite aleatoriamente os numero para serem ordenados: '}
          PrintParam = epsilon
          [0031, 0069] (0046,              FEC_PAR) {)}
          [0031, 0071] (0049,             TERMINAL) {;}
  32          Repeat (Integer i = 0, 1, n) Begin
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0032, 0015] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0032, 0018] (0045,               AB_PAR) {(}
          [0032, 0026] (0029,           PR_INTEGER) {Integer}
          [0032, 0029] (0001,                   ID) {i}
          [0032, 0032] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0032, 0035] (0003,              CTE_INT) {0}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0032, 0037] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0032, 0040] (0003,              CTE_INT) {1}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          repeatStep = ',' Ea
          [0032, 0042] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0032, 0045] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0032, 0047] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0032, 0054] (0041,             PR_BEGIN) {Begin}
  33  	        Input(array[i]);
          Instructions = Command Instructions
          Command = 'Input' '(' InputParam ')' ';'
          [0033, 0015] (0034,             PR_INPUT) {Input}
          [0033, 0017] (0045,               AB_PAR) {(}
          InputParam = 'id' VectorType InputParamLL
          [0033, 0023] (0001,                   ID) {array}
          VectorType = '[' Ea ']'
          [0033, 0025] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0033, 0027] (0001,                   ID) {i}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0033, 0029] (0048,              FEC_COL) {]}
          InputParamLL = epsilon
          [0033, 0031] (0046,              FEC_PAR) {)}
          [0033, 0033] (0049,             TERMINAL) {;}
  34          End
          Instructions = epsilon
          [0034, 0012] (0042,               PR_END) {End}
  35          Print('Valores adicionados: ');
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0035, 0014] (0035,             PR_PRINT) {Print}
          [0035, 0016] (0045,               AB_PAR) {(}
          [0035, 0040] (0005,           CTE_CADCHA) {'Valores adicionados: '}
          PrintParam = epsilon
          [0035, 0042] (0046,              FEC_PAR) {)}
          [0035, 0044] (0049,             TERMINAL) {;}
  36          Repeat (Integer i = 0, 1, n) Begin
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0036, 0015] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0036, 0018] (0045,               AB_PAR) {(}
          [0036, 0026] (0029,           PR_INTEGER) {Integer}
          [0036, 0029] (0001,                   ID) {i}
          [0036, 0032] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0036, 0035] (0003,              CTE_INT) {0}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0036, 0037] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0036, 0040] (0003,              CTE_INT) {1}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          repeatStep = ',' Ea
          [0036, 0042] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0036, 0045] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0036, 0047] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0036, 0054] (0041,             PR_BEGIN) {Begin}
  37              v = array[i];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0037, 0014] (0001,                   ID) {v}
          Atrib = '=' Ec Atrib
          [0037, 0017] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0037, 0024] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0037, 0026] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0037, 0028] (0001,                   ID) {i}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0037, 0030] (0048,              FEC_COL) {]}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0037, 0032] (0049,             TERMINAL) {;}
  38  	        Printnl(v);
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0038, 0017] (0036,           PR_PRINTNL) {Printnl}
          [0038, 0019] (0045,               AB_PAR) {(}
          [0038, 0021] (0001,                   ID) {v}
          PrintParam = epsilon
          [0038, 0023] (0046,              FEC_PAR) {)}
          [0038, 0025] (0049,             TERMINAL) {;}
  39          End
          Instructions = epsilon
          [0039, 0012] (0042,               PR_END) {End}
  40  		shellsort(array[n], n);
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0040, 0012] (0001,                   ID) {shellsort}
          ParamAtrib = '(' ParamFunction ')'
          [0040, 0014] (0045,               AB_PAR) {(}
          ParamFunction = Ec ParamFunctionLL
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0040, 0020] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0040, 0022] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0040, 0024] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0040, 0026] (0048,              FEC_COL) {]}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          ParamFunctionLL = ',' Ec ParamFunctionLL
          [0040, 0028] (0050,                  SEP) {,}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0040, 0031] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          ParamFunctionLL = epsilon
          [0040, 0033] (0046,              FEC_PAR) {)}
          [0040, 0035] (0049,             TERMINAL) {;}
  41  
  42  		Print('Valores ordenados: ');
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0042, 0008] (0035,             PR_PRINT) {Print}
          [0042, 0010] (0045,               AB_PAR) {(}
          [0042, 0032] (0005,           CTE_CADCHA) {'Valores ordenados: '}
          PrintParam = epsilon
          [0042, 0034] (0046,              FEC_PAR) {)}
          [0042, 0036] (0049,             TERMINAL) {;}
  43          Repeat (Integer i = 0, 1, n) Begin
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0043, 0015] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0043, 0018] (0045,               AB_PAR) {(}
          [0043, 0026] (0029,           PR_INTEGER) {Integer}
          [0043, 0029] (0001,                   ID) {i}
          [0043, 0032] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0043, 0035] (0003,              CTE_INT) {0}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0043, 0037] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0043, 0040] (0003,              CTE_INT) {1}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          repeatStep = ',' Ea
          [0043, 0042] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0043, 0045] (0001,                   ID) {n}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0043, 0047] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0043, 0054] (0041,             PR_BEGIN) {Begin}
  44              v = array[i];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAtrib
          [0044, 0014] (0001,                   ID) {v}
          Atrib = '=' Ec Atrib
          [0044, 0017] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0044, 0024] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0044, 0026] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0044, 0028] (0001,                   ID) {i}
          IdFunctionCall_LL = epsilon
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          [0044, 0030] (0048,              FEC_COL) {]}
          PaLL = epsilon
          TaLL = epsilon
          EaLL = epsilon
          RaLL = epsilon
          FbLL = epsilon
          TbLL = epsilon
          EbLL = epsilon
          EcLL = epsilon
          Atrib = epsilon
          [0044, 0032] (0049,             TERMINAL) {;}
  45  	        Printnl(v);
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0045, 0017] (0036,           PR_PRINTNL) {Printnl}
          [0045, 0019] (0045,               AB_PAR) {(}
          [0045, 0021] (0001,                   ID) {v}
          PrintParam = epsilon
          [0045, 0023] (0046,              FEC_PAR) {)}
          [0045, 0025] (0049,             TERMINAL) {;}
  46          End
          Instructions = epsilon
          [0046, 0012] (0042,               PR_END) {End}
  47  
  48  		Refound;
          Instructions = 'Refound' Return ';'
          [0048, 0010] (0024,           PR_REFOUND) {Refound}
          Refound = epsilon
          [0048, 0012] (0049,             TERMINAL) {;}
  49  End
          [0049, 0004] (0042,               PR_END) {End}
          [0049, 0005] (0000,                  EOF) {EOF}
          S = epsilon
Success 
