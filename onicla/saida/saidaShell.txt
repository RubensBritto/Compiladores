   1  Function Void shellsort(Integer array[ ], Integer n) Begin
          S = DeclFunction S
          DeclFunction = 'Function' FunctionType NameFunctionId '(' ConstDecl ')' InternalDecl
          [0001, 0001] (0023,              PR_FUNC) {Function}
          Type = 'Void'
          [0001, 0002] (0043,              PR_VOID) {Void}
          nameFunction = 'id'
          [0001, 0003] (0001,                   ID) {shellsort}
          [0001, 0004] (0045,               AB_PAR) {(}
          ConstDecl = Type 'id' VectorType ConstDecl_LL
          Type = 'Integer'
          [0001, 0005] (0029,           PR_INTEGER) {Integer}
          [0001, 0006] (0001,                   ID) {array}
          VectorType = '[' Ea ']'
          [0001, 0007] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          PaLL = e
          TaLL = e
          EaLL = e
          [0001, 0008] (0048,              FEC_COL) {]}
          ConstDecl_LL = ',' Type 'id' VectorType ConstDecl_LL
          [0001, 0009] (0050,                  SEP) {,}
          Type = 'Integer'
          [0001, 0010] (0029,           PR_INTEGER) {Integer}
          [0001, 0011] (0001,                   ID) {n}
          VectorType = e
          [0001, 0012] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0001, 0013] (0041,             PR_BEGIN) {Begin}
   2  		Integer h = 1, c, j;
          Instructions = DeclId Instructions
          DeclId = Type IdLL ';'
          Type = 'Integer'
          [0002, 0001] (0029,           PR_INTEGER) {Integer}
          IdLL = Id '=' Id_LL
          Id = 'id' VectorType
          [0002, 0002] (0001,                   ID) {h}
          VectorType = e
          = = '=' Ec
          [0002, 0003] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0002, 0004] (0003,              CTE_INT) {1}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Id_LL = ',' Id '=' Id_LL
          [0002, 0005] (0050,                  SEP) {,}
          Id = 'id' VectorType
          [0002, 0006] (0001,                   ID) {c}
          VectorType = e
          = = e
          Id_LL = ',' Id '=' Id_LL
          [0002, 0007] (0050,                  SEP) {,}
          Id = 'id' VectorType
          [0002, 0008] (0001,                   ID) {j}
          VectorType = e
          = = e
          Id_LL = e
          [0002, 0009] (0049,             TERMINAL) {;}
   3  
   4          While (h < n) Begin
While
          Instructions = Command Instructions
          Command = 'PR_WHILE' '(' Eb ')' InternalDecl
          [0004, 0001] (0027,             PR_WHILE) {While}
          [0004, 0002] (0045,               AB_PAR) {(}
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0004, 0003] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = 'OP_LESS' Ra FbLL
          [0004, 0004] (0016,              OP_LESS) {<}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0004, 0005] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          [0004, 0006] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0004, 0007] (0041,             PR_BEGIN) {Begin}
   5  			h = h * 3 + 1;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0005, 0001] (0001,                   ID) {h}
          Atrib = '=' Ec Atrib
          [0005, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0005, 0003] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = 'OP_MULT' Pa TaLL
          [0005, 0004] (0011,              OP_MULT) {*}
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0005, 0005] (0003,              CTE_INT) {3}
          PaLL = e
          TaLL = e
          EaLL = 'OP_AD' Ta EaLL
          [0005, 0006] (0009,                OP_AD) {+}
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0005, 0007] (0003,              CTE_INT) {1}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0005, 0008] (0049,             TERMINAL) {;}
   6  		End
          Instructions = e
          [0006, 0001] (0042,               PR_END) {End}
   7  
   8  		h = h / 3;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0008, 0001] (0001,                   ID) {h}
          Atrib = '=' Ec Atrib
          [0008, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0008, 0003] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = 'OP_DIV' Pa TaLL
          [0008, 0004] (0012,               OP_DIV) {/}
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0008, 0005] (0003,              CTE_INT) {3}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0008, 0006] (0049,             TERMINAL) {;}
   9  
  10  		While(h > 0) Begin
While
          Instructions = Command Instructions
          Command = 'PR_WHILE' '(' Eb ')' InternalDecl
          [0010, 0001] (0027,             PR_WHILE) {While}
          [0010, 0002] (0045,               AB_PAR) {(}
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0010, 0003] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = 'OP_GREAT' Ra FbLL
          [0010, 0004] (0015,           OP_GREATER) {>}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0010, 0005] (0003,              CTE_INT) {0}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          [0010, 0006] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0010, 0007] (0041,             PR_BEGIN) {Begin}
  11  			Repeat (Integer i = h, 1, n) Begin
Repeat
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0011, 0001] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0011, 0002] (0045,               AB_PAR) {(}
          [0011, 0003] (0029,           PR_INTEGER) {Integer}
          [0011, 0004] (0001,                   ID) {i}
          [0011, 0005] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0011, 0006] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0011, 0007] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0011, 0008] (0003,              CTE_INT) {1}
          PaLL = e
          TaLL = e
          EaLL = e
          repeatStep = ',' Ea
          [0011, 0009] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0011, 0010] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0011, 0011] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0011, 0012] (0041,             PR_BEGIN) {Begin}
  12                      c = array[i];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0012, 0001] (0001,                   ID) {c}
          Atrib = '=' Ec Atrib
          [0012, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0012, 0003] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0012, 0004] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0012, 0005] (0001,                   ID) {i}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0012, 0006] (0048,              FEC_COL) {]}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0012, 0007] (0049,             TERMINAL) {;}
  13                      j = i;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0013, 0001] (0001,                   ID) {j}
          Atrib = '=' Ec Atrib
          [0013, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0013, 0003] (0001,                   ID) {i}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0013, 0004] (0049,             TERMINAL) {;}
  14                      While (j >= h And array[j - h] > c) Begin
While
          Instructions = Command Instructions
          Command = 'PR_WHILE' '(' Eb ')' InternalDecl
          [0014, 0001] (0027,             PR_WHILE) {While}
          [0014, 0002] (0045,               AB_PAR) {(}
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0003] (0001,                   ID) {j}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = 'OP_GREATEQ' Ra FbLL
          [0014, 0004] (0017,           OP_GREATEQ) {>=}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0005] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = 'PR_AND' Fb TbLL
          [0014, 0006] (0021,               PR_AND) {And}
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0007] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0014, 0008] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0009] (0001,                   ID) {j}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = 'OP_SUB' Ta EaLL
          [0014, 0010] (0010,               OP_SUB) {-}
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0011] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0014, 0012] (0048,              FEC_COL) {]}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = 'OP_GREAT' Ra FbLL
          [0014, 0013] (0015,           OP_GREATER) {>}
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0014, 0014] (0001,                   ID) {c}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          [0014, 0015] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0014, 0016] (0041,             PR_BEGIN) {Begin}
  15                              array[j] = array[j - h];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0015, 0001] (0001,                   ID) {array}
          ParamAttrib = '[' Ea ']' '=' Ec Atrib
          [0015, 0002] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0003] (0001,                   ID) {j}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0015, 0004] (0048,              FEC_COL) {]}
          [0015, 0005] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0006] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0015, 0007] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0008] (0001,                   ID) {j}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = 'OP_SUB' Ta EaLL
          [0015, 0009] (0010,               OP_SUB) {-}
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0015, 0010] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0015, 0011] (0048,              FEC_COL) {]}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0015, 0012] (0049,             TERMINAL) {;}
  16                              j = j - h;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0016, 0001] (0001,                   ID) {j}
          Atrib = '=' Ec Atrib
          [0016, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0016, 0003] (0001,                   ID) {j}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = 'OP_SUB' Ta EaLL
          [0016, 0004] (0010,               OP_SUB) {-}
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0016, 0005] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0016, 0006] (0049,             TERMINAL) {;}
  17                      End
          Instructions = e
          [0017, 0001] (0042,               PR_END) {End}
  18                      array[j] = c;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0018, 0001] (0001,                   ID) {array}
          ParamAttrib = '[' Ea ']' '=' Ec Atrib
          [0018, 0002] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0018, 0003] (0001,                   ID) {j}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0018, 0004] (0048,              FEC_COL) {]}
          [0018, 0005] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0018, 0006] (0001,                   ID) {c}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0018, 0007] (0049,             TERMINAL) {;}
  19  			End
          Instructions = e
          [0019, 0001] (0042,               PR_END) {End}
  20  			h = h / 2;
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0020, 0001] (0001,                   ID) {h}
          Atrib = '=' Ec Atrib
          [0020, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0020, 0003] (0001,                   ID) {h}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = 'OP_DIV' Pa TaLL
          [0020, 0004] (0012,               OP_DIV) {/}
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0020, 0005] (0003,              CTE_INT) {2}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0020, 0006] (0049,             TERMINAL) {;}
  21  		End
          Instructions = e
          [0021, 0001] (0042,               PR_END) {End}
  22  		Refound;
          Instructions = 'Refound' Return ';'
          [0022, 0001] (0024,           PR_REFOUND) {Refound}
          Refound = e
          [0022, 0002] (0049,             TERMINAL) {;}
  23  	End
          [0023, 0001] (0042,               PR_END) {End}
  24  
  25  Function Integer Main ( ) Begin
          S = DeclFunction S
          DeclFunction = 'Function' FunctionType NameFunctionId '(' ConstDecl ')' InternalDecl
          [0025, 0001] (0023,              PR_FUNC) {Function}
          Type = 'Integer'
          [0025, 0002] (0029,           PR_INTEGER) {Integer}
          nameFunction = 'main'
          [0025, 0003] (0044,              PR_MAIN) {Main}
          [0025, 0004] (0045,               AB_PAR) {(}
          ConstDecl = e
          [0025, 0005] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0025, 0006] (0041,             PR_BEGIN) {Begin}
  26  		Integer n, v;
          Instructions = DeclId Instructions
          DeclId = Type IdLL ';'
          Type = 'Integer'
          [0026, 0001] (0029,           PR_INTEGER) {Integer}
          IdLL = Id '=' Id_LL
          Id = 'id' VectorType
          [0026, 0002] (0001,                   ID) {n}
          VectorType = e
          = = e
          Id_LL = ',' Id '=' Id_LL
          [0026, 0003] (0050,                  SEP) {,}
          Id = 'id' VectorType
          [0026, 0004] (0001,                   ID) {v}
          VectorType = e
          = = e
          Id_LL = e
          [0026, 0005] (0049,             TERMINAL) {;}
  27  		Print('Digite o tamanho do array a ser ordenado: ');
Print
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0027, 0001] (0035,             PR_PRINT) {Print}
          [0027, 0002] (0045,               AB_PAR) {(}
          [0027, 0003] (0005,           CTE_CADCHA) {'Digite o tamanho do array a ser ordenado: '}
          PrintParam = e
          [0027, 0004] (0046,              FEC_PAR) {)}
          [0027, 0005] (0049,             TERMINAL) {;}
  28  		Input(n);
Input
          Instructions = Command Instructions
          Command = 'Input' '(' InputParam ')' ';'
          [0028, 0001] (0034,             PR_INPUT) {Input}
          [0028, 0002] (0045,               AB_PAR) {(}
          InputParam = 'id' VectorType InputParamLL
          [0028, 0003] (0001,                   ID) {n}
          VectorType = e
          InputParamLL = e
          [0028, 0004] (0046,              FEC_PAR) {)}
          [0028, 0005] (0049,             TERMINAL) {;}
  29  		Integer array[n];
          Instructions = DeclId Instructions
          DeclId = Type IdLL ';'
          Type = 'Integer'
          [0029, 0001] (0029,           PR_INTEGER) {Integer}
          IdLL = Id '=' Id_LL
          Id = 'id' VectorType
          [0029, 0002] (0001,                   ID) {array}
          VectorType = '[' Ea ']'
          [0029, 0003] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0029, 0004] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0029, 0005] (0048,              FEC_COL) {]}
          = = e
          Id_LL = e
          [0029, 0006] (0049,             TERMINAL) {;}
  30  
  31  		Print('Digite aleatoriamente os numero para serem ordenados: ');
Print
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0031, 0001] (0035,             PR_PRINT) {Print}
          [0031, 0002] (0045,               AB_PAR) {(}
          [0031, 0003] (0005,           CTE_CADCHA) {'Digite aleatoriamente os numero para serem ordenados: '}
          PrintParam = e
          [0031, 0004] (0046,              FEC_PAR) {)}
          [0031, 0005] (0049,             TERMINAL) {;}
  32          Repeat (Integer i = 0, 1, n) Begin
Repeat
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0032, 0001] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0032, 0002] (0045,               AB_PAR) {(}
          [0032, 0003] (0029,           PR_INTEGER) {Integer}
          [0032, 0004] (0001,                   ID) {i}
          [0032, 0005] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0032, 0006] (0003,              CTE_INT) {0}
          PaLL = e
          TaLL = e
          EaLL = e
          [0032, 0007] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0032, 0008] (0003,              CTE_INT) {1}
          PaLL = e
          TaLL = e
          EaLL = e
          repeatStep = ',' Ea
          [0032, 0009] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0032, 0010] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0032, 0011] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0032, 0012] (0041,             PR_BEGIN) {Begin}
  33  	        Input(array[i]);
Input
          Instructions = Command Instructions
          Command = 'Input' '(' InputParam ')' ';'
          [0033, 0001] (0034,             PR_INPUT) {Input}
          [0033, 0002] (0045,               AB_PAR) {(}
          InputParam = 'id' VectorType InputParamLL
          [0033, 0003] (0001,                   ID) {array}
          VectorType = '[' Ea ']'
          [0033, 0004] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0033, 0005] (0001,                   ID) {i}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0033, 0006] (0048,              FEC_COL) {]}
          InputParamLL = e
          [0033, 0007] (0046,              FEC_PAR) {)}
          [0033, 0008] (0049,             TERMINAL) {;}
  34          End
          Instructions = e
          [0034, 0001] (0042,               PR_END) {End}
  35          Print('Valores adicionados: ');
Print
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0035, 0001] (0035,             PR_PRINT) {Print}
          [0035, 0002] (0045,               AB_PAR) {(}
          [0035, 0003] (0005,           CTE_CADCHA) {'Valores adicionados: '}
          PrintParam = e
          [0035, 0004] (0046,              FEC_PAR) {)}
          [0035, 0005] (0049,             TERMINAL) {;}
  36          Repeat (Integer i = 0, 1, n) Begin
Repeat
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0036, 0001] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0036, 0002] (0045,               AB_PAR) {(}
          [0036, 0003] (0029,           PR_INTEGER) {Integer}
          [0036, 0004] (0001,                   ID) {i}
          [0036, 0005] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0036, 0006] (0003,              CTE_INT) {0}
          PaLL = e
          TaLL = e
          EaLL = e
          [0036, 0007] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0036, 0008] (0003,              CTE_INT) {1}
          PaLL = e
          TaLL = e
          EaLL = e
          repeatStep = ',' Ea
          [0036, 0009] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0036, 0010] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0036, 0011] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0036, 0012] (0041,             PR_BEGIN) {Begin}
  37              v = array[i];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0037, 0001] (0001,                   ID) {v}
          Atrib = '=' Ec Atrib
          [0037, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0037, 0003] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0037, 0004] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0037, 0005] (0001,                   ID) {i}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0037, 0006] (0048,              FEC_COL) {]}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0037, 0007] (0049,             TERMINAL) {;}
  38  	        Printnl(v);
Printnl
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0038, 0001] (0036,           PR_PRINTNL) {Printnl}
          [0038, 0002] (0045,               AB_PAR) {(}
          [0038, 0003] (0001,                   ID) {v}
          PrintParam = e
          [0038, 0004] (0046,              FEC_PAR) {)}
          [0038, 0005] (0049,             TERMINAL) {;}
  39          End
          Instructions = e
          [0039, 0001] (0042,               PR_END) {End}
  40  		shellsort(array[n], n);
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0040, 0001] (0001,                   ID) {shellsort}
          ParamAttrib = '(' ParamFunction ')'
          [0040, 0002] (0045,               AB_PAR) {(}
          ParamFunction = Ec ParamFunctionLL
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0040, 0003] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0040, 0004] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0040, 0005] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0040, 0006] (0048,              FEC_COL) {]}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          ParamFunctionLL = ',' Ec ParamFunctionLL
          [0040, 0007] (0050,                  SEP) {,}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0040, 0008] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          ParamFunctionLL = e
          [0040, 0009] (0046,              FEC_PAR) {)}
          [0040, 0010] (0049,             TERMINAL) {;}
  41  
  42  		Print('Valores ordenados: ');
Print
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0042, 0001] (0035,             PR_PRINT) {Print}
          [0042, 0002] (0045,               AB_PAR) {(}
          [0042, 0003] (0005,           CTE_CADCHA) {'Valores ordenados: '}
          PrintParam = e
          [0042, 0004] (0046,              FEC_PAR) {)}
          [0042, 0005] (0049,             TERMINAL) {;}
  43          Repeat (Integer i = 0, 1, n) Begin
Repeat
          Instructions = Command Instructions
          Command = 'Repeat' repeatParams
          [0043, 0001] (0028,            PR_REPEAT) {Repeat}
          Repeat = '(' Integer 'id' '='  Ea ',' Ea repeatStep ')' InternalDecl
          [0043, 0002] (0045,               AB_PAR) {(}
          [0043, 0003] (0029,           PR_INTEGER) {Integer}
          [0043, 0004] (0001,                   ID) {i}
          [0043, 0005] (0007,               OP_ATR) {=}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0043, 0006] (0003,              CTE_INT) {0}
          PaLL = e
          TaLL = e
          EaLL = e
          [0043, 0007] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          Fa = 'CTE_INT'
          [0043, 0008] (0003,              CTE_INT) {1}
          PaLL = e
          TaLL = e
          EaLL = e
          repeatStep = ',' Ea
          [0043, 0009] (0050,                  SEP) {,}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0043, 0010] (0001,                   ID) {n}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0043, 0011] (0046,              FEC_PAR) {)}
          InternalDecl = 'Begin' Instructions 'End'
          [0043, 0012] (0041,             PR_BEGIN) {Begin}
  44              v = array[i];
          Instructions = instructionsLL ';' Instructions
          instructionsLL = 'id' ParamAttr
          [0044, 0001] (0001,                   ID) {v}
          Atrib = '=' Ec Atrib
          [0044, 0002] (0007,               OP_ATR) {=}
          Ec = Fc EcLL
          Eb = Tb EbLL
          Tb = Fb TbLL
          Fb = Ra FbLL
          Ra = Ea RaLL
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0044, 0003] (0001,                   ID) {array}
          IdFunctionCall_LL = '[' Ea ']'
          [0044, 0004] (0047,               AB_COL) {[}
          Ea = Ta EaLL
          Ta = Pa TaLL
          Pa = Fa PaLL
          IdFunctionCall = 'id' IdFunctionCall_LL
          [0044, 0005] (0001,                   ID) {i}
          IdFunctionCall_LL = e
          PaLL = e
          TaLL = e
          EaLL = e
          [0044, 0006] (0048,              FEC_COL) {]}
          PaLL = e
          TaLL = e
          EaLL = e
          RaLL = e
          FbLL = e
          TbLL = e
          EbLL = e
          EcLL = e
          Atrib = e
          [0044, 0007] (0049,             TERMINAL) {;}
  45  	        Printnl(v);
Printnl
          Instructions = Command Instructions
          Command = 'print' '(' 'CTE_CADCHA' PrintParam ')' ';'
          [0045, 0001] (0036,           PR_PRINTNL) {Printnl}
          [0045, 0002] (0045,               AB_PAR) {(}
          [0045, 0003] (0001,                   ID) {v}
          PrintParam = e
          [0045, 0004] (0046,              FEC_PAR) {)}
          [0045, 0005] (0049,             TERMINAL) {;}
  46          End
          Instructions = e
          [0046, 0001] (0042,               PR_END) {End}
  47  
  48  		Refound;
          Instructions = 'Refound' Return ';'
          [0048, 0001] (0024,           PR_REFOUND) {Refound}
          Refound = e
          [0048, 0002] (0049,             TERMINAL) {;}
  49  End
          [0049, 0001] (0042,               PR_END) {End}
          [0049, 0001] (0000,                  EOF) {EOF}
          S = e
Sucesso 
